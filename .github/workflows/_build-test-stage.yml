name: Build & Test Stage

on:
  # [Automated Build & Test Execution]-[AC.1]:
  #   If the caller call this workflow, then it will automatically triggered
  #   according to the event trigger of the caller. In this case the caller
  #   should be config to be trigger CI build with event push
  workflow_call:
    inputs:
      runner:
        description: "Choose runner"
        type: string
        required: true
        default: "ubuntu-latest"

      service-name:
        description: Service name to test
        type: string
        default: ""
        required: false

      custom-test-script:
        description: Custom script to test
        type: string
        required: false

      custom-build-script:
        description: Custom script to build
        type: string
        required: false

      report:
        description: "Enable regression report upload (true/false)"
        type: boolean
        required: false
        default: true

# [Automated Build & Test Execution]-[AC.3]: Build is complete within 5 minutes for Commit Stage CI/CD.
# [Automated Build & Test Execution]-[AC.5]: Build logs can be search the GitHub logs itself.
# [Parallel Test Suite Execution]-[AC.1]: Unit test and integration test execute in parallel
# [Parallel Test Suite Execution]-[AC.3]: The stage will finish in under 8 minutes for Commit Stage CI/CD.
# [Parallel Test Suite Execution]-[AC.5]: Test execution time is tracked by GitHub itself
# [Parallel Test Suite Execution]-[AC.6]: Test report includes in the GitHub logs itself
jobs:
  unit-test:
    name: Perform Unit Test & Dependencies Report
    runs-on: ${{ inputs.runner }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            ${{ inputs.service-name }}

      - name: Checkout actions library
        uses: actions/checkout@v4
        with:
          repository: "Le-Hoang-Thinh-The-Automationist/pfh-pipeline"
          ref: "feature/2-pipeline-feat-add-a-compatible-cis-build-test-delivery-for-frontend"
          path: pipeline

      - name: Read Configuration
        id: config
        uses: pietrobolcato/action-read-yaml@1.1.0
        with:
          config: ./${{  inputs.service-name }}/cicd-config.yml

      - name: Maven Package Management
        if: ${{ steps.config.outputs['ci_config.package_management.mvn.enabled'] == 'true' }}
        uses: ./pipeline/.github/actions/build-test-delivery/dependencies/installation/mvn
        with:
          java-version: ${{ steps.config.outputs['ci_config.package_management.mvn.java_version'] }}
          service-name: ${{ inputs.service-name }}

      - name: Nodes Package Management
        if: ${{ steps.config.outputs['ci_config.package_management.npm.enabled'] == 'true' }}
        uses: ./pipeline/.github/actions/build-test-delivery/dependencies/installation/npm
        with:
          node-version: ${{ steps.config.outputs['ci_config.package_management.npm.node_version'] }}
          service-name: ${{ inputs.service-name }}

      # [Parallel Test Suite Execution]-[AC.2]: Fail fast mechanism is depend on the input custom code
      - name: Run custom test script
        if: ${{ inputs.custom-test-script != '' }}
        run: bash ${{ inputs.custom-test-script }}

  build-and-intergration-test:
    name: Build and Perform Integration Test
    # [Automated Build & Test Execution]-[AC.2]:
    #   Use containerized build environment (Docker image with JDK + Maven/Gradle) to ensure
    #   all stage will run with the same environement.
    runs-on: ${{ inputs.runner }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            ${{ inputs.service-name }}

      - name: Checkout actions library
        uses: actions/checkout@v4
        with:
          repository: "Le-Hoang-Thinh-The-Automationist/pfh-pipeline"
          ref: "feature/2-pipeline-feat-add-a-compatible-cis-build-test-delivery-for-frontend"
          path: pipeline

      - name: Read Configuration
        id: config
        uses: pietrobolcato/action-read-yaml@1.1.0
        with:
          config: ./${{  inputs.service-name }}/cicd-config.yml

      - name: Maven Package Management
        if: ${{ steps.config.outputs['ci_config.package_management.mvn.enabled'] == 'true' }}
        uses: ./pipeline/.github/actions/build-test-delivery/dependencies/installation/mvn
        with:
          java-version: ${{ steps.config.outputs['ci_config.package_management.mvn.java_version'] }}
          service-name: ${{ inputs.service-name }}

      - name: Nodes Package Management
        if: ${{ steps.config.outputs['ci_config.package_management.npm.enabled'] == 'true' }}
        uses: ./pipeline/.github/actions/build-test-delivery/dependencies/installation/npm
        with:
          node-version: ${{ steps.config.outputs['ci_config.package_management.npm.node_version'] }}
          service-name: ${{ inputs.service-name }}

      # [Parallel Test Suite Execution]-[AC.2]: Fail fast mechanism is depend on the input custom code
      - name: Run custom build script
        if: ${{ inputs.custom-build-script != '' }}
        run: bash ${{ inputs.custom-build-script }}

      - name: Build & Deliver Docker Image
        if: ${{ steps.config.outputs['ci_config.delivery_management.container.type'] == 'docker' }}
        uses: ./pipeline/.github/actions/build-test-delivery/delivery/container/docker
        with:
          registry-url: ${{ steps.config.outputs['ci_config.delivery_management.container.registry.url'] }}
          service-name: ${{ inputs.service-name }}
