name: Quality Monitoring CI
on:
  # For testing purpose
  workflow_dispatch:
    inputs:
      environment:
        description: Choose an environment for testing
        required: true
        type: choice
        options:
          - QA

  workflow_call:
    inputs:
      # ============ INPUT CONFIGURATION ============
      environment:
        required: true
        type: string
      service-name:
        required: true
        type: string

      # ============ CUSTOM SCRIPT ============
      custom-test-script:
        description: Custom script to test
        type: string
        required: false
      custom-build-script:
        description: Custom script to build
        type: string
        required: false

    secrets:
      deploy_token:
        required: true

jobs:
  # üõ†Ô∏è Stage 1: Source Control & Validation
  # [New Merged Quality Healthcheck]-[AC.1.1]: (Boilerplate) Code quality checks (linting, security scanning, code coverage) executed automatically
  source-validation:
    runs-on: ubuntu-latest
    name: "[BOILERPLATE] Lint and Static Analysis"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Static code analysis
        run: |
          echo "Run SonarQube for Quality Gates"
          echo "Run SonarQube for SAST"

  # üîç Stage 2: Build & Compile & Testing
  # [New Merged Quality Healthcheck]-[AC.2]:  Full test suite for functionality and component test
  # [New Merged Quality Healthcheck]-[AC.3]:  Build SW and packaging them sucessfully, detail
  #                                           implementation should be checked in the 'uses'
  build-test:
    uses: ./.github/workflows/_build-test-stage.yml
    with:
      runner: ubuntu-latest
      report: false
      service-name: ${{ inputs.service-name }}
      custom-test-script: ${{ inputs.custom-test-script }}
      custom-build-script: ${{ inputs.custom-build-script }}

  # üîê Stage 3: Security & Compliance Gate
  # [[New Merged Quality Healthcheck]-[AC.4.1]: (boilerplate) Dependency vulnerability checks and license compliance
  compliance-check:
    needs:
      - source-validation
      - build-test
    uses: ./.github/workflows/_security-compliance-stage.yml
    with:
      runner: ubuntu-latest

  # üì¶ Stage 4: Artifact Management
  artifact-handling:
    runs-on: ubuntu-latest
    needs: compliance-check
    name: "[BOILERPLATE] Artifact handling"
    steps:
      - name: Push Docker Image to Registry
        run: echo "Push Docker Image to Registry"

      - name: Save Test report to Artifact
        run: echo "Save Test report to Artifact"

      - name: Save Security Audit log to Artifact
        run: echo "Save Security Audit log to Artifact"

  # üì¶ Stage 5: Deployment
  # [[New Merged Quality Healthcheck]-[AC.5.1]: Deployment should be run only when trigger manually (boilerplate)
  deploy:
    runs-on: ubuntu-latest
    needs: artifact-handling
    name: "[BOILERPLATE] Approve for Deployment"
    steps:
      - name: Manual trigger the "Deployment Workflows Service" to proceed with the deployment
        run: echo "More detail, please check with the PIC for the deployment"
