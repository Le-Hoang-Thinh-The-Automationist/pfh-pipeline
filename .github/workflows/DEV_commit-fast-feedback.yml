name: DEV Commit Fast Feedback
on:
  workflow_dispatch:
    inputs:
        # ============ INPUT CONFIGURATION ============
        service-name:
            description: Name of the service
            required: true
            type: string
    
        # ============ CUSTOM SCRIPT ============
        custom-test-script:
            description: Custom script to test
            type: string
            required: false
            
        custom-build-script:
            description: Custom script to build
            type: string
            required: false

        # ============ ADDITIONAL STAGE ============
        security-and-compliance-check-enable:
            description: Enable security and compliance check stage (true/false)
            type: boolean
            required: false
            default: false

  workflow_call:
    inputs:
      # ============ INPUT CONFIGURATION ============
      environment:
        required: true
        type: string
      service-name:
        required: true
        type: string

      # ============ CUSTOM SCRIPT ============
      custom-test-script:
        description: Custom script to test
        type: string
        required: false
      custom-build-script:
        description: Custom script to build
        type: string
        required: false    

    secrets:
      deploy_token:
        required: true


jobs:
  # üõ†Ô∏è Stage 1: Source Control & Validation
  # [Fast Feedback at Commit Stage]-[AC.1]: Automatic linting and static analysis.
  source-validation:
    runs-on: ubuntu-latest
    name: Lint and Static Analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Linting
        run: |
          echo "Run Linting"

      - name: Static code analysis
        run: |
          echo "Run SonarQube for Quality Gates"
          echo "Run SonarQube for SAST"

  # üîç Stage 2: Build & Compile & Testing
  build-test:
    uses: ./.github/workflows/build-test-stage-template.yml
    with:
      runner:               ubuntu-latest
      registry:             false
      report:               false
      custom-test-script:   ${{ inputs.custom-test-script }}
      custom-build-script:  ${{ inputs.custom-build-script }}

  # üîê Stage 3: Security & Compliance Gate
  # [Fast Feedback at Commit Stage]-[AC.5]: Optional security and compliance check stage
  security-and-compliance-check:
    runs-on: ubuntu-latest
    name: Security and Compliance Check
    if: ${{ inputs.security-and-compliance-check-enable == 'true' }}
    needs: 
      - source-validation
      - build-test
    steps:
      - name: Docker Image Scanning
        run:  echo "Docker Image Scanning"
        
      - name: Policy enforcement
        run: echo "Run OPA or Sentinel policies"

      - name: Audit logging
        run: echo "Log evidence for compliance"

      - name: Sign Docker images
        run: echo "Sign Docker images with cryptographic signatures before push them to Registry"